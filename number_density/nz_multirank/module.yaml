name: nz_multirank
version: 1
purpose: Load, rank, and sample a set of density n(z) realisations from a FITS file
url: ''
interface: nz_multirank.py
attribution: ["Juan P. Cordero", "Ian Harrison"]
rules: If you use a file from a particular survey you should cite that survey
cite: []
assumptions:
    - "Realisations are provided in FITS extensions NZ\_{NAME}_realisation_{NUMBER} starting with NUMBER=0, in correlated order and without skips"

explanation: |
    "This module is designed to work with the number density part of the FITS
    files described in:
    http://github.com/joezuntz/2point/

    Uncertainty in the redshift distributions is usually described by a nuisance
    parameter which allows the mean of the distribution to be shifted from a fiducial
    central value.
    This value is then marginalized in the pipeline.
    But higher order distribution moments which are not captured by this paramterization
    can propagate into the cosmological parameters and its uncertainty ignored.

    An empirical approach to solve this is to provide multiple realisations of the
    redshift distributions n(z) containing realistic samples of the higher order moments.
    as well as the small redshift scale variance.
    We can then sample from them directly rather than using nuisance to capture the
    full effect of the shapes of the redshift distributions, as well as their internal
    correlation.

    This module extends the load\_nz\_fits module to read multiple realisations, one per
    extension.
    It then ranks the realisations depending on the selected mode and maps it to a continuous
    hyper-parameter which can be sampled in the pipeline.
    The ranking is intended to provide a meaningful metric in the n(z) space, allowing
    for better sampling efficiency over random sampling of the realisations.
    "
params:
    mode:
        meaning: 'Ranking mode, use to define how the realisations are mapped to the
            hyperparameter. It has to be one of the following: mean, invchi, external'
        type: str
        default: mean
    nz_file:
        meaning: Absolute or relative path to an n(z) file
        type: str
        default:
    data_set:
        meaning: Names of the extensions prefixes in the FITS files to load and save
            to the block
        type: str
        default:
    upsampling:
        meaning: The number of sample points output for each one in the file. n(z)
            is assumed flat between them. See notes above.
        type: int
        default: 1
    saved_stats:
        meaning: Numpy npy file from which to load rankings
        type: str
        default: ""
    bin_ranks:
        meaning: The choice of which tomographic bins to generate statistics for
        type: int 1d
        default:
    dimensions:
        meaning: The number of tomographic bins, and thus the dimensionality of map to generate
        type: int
        default: 2
    resume:
        meaning: Whether to load a pre-computed map from parameters to rank
        type: bool
        default: False
    resume_map:
        meaning: Filename to load pre-computed map from
        type: str
        default: ""

inputs:
    ranks:
        rank_hyperparm_i:
            meaning: Hyperparameter mapped to a redshift distribution. If mode is
                separate, then i = 1...n_bins
            type: real
            default:
outputs:
    wl_number_density:
        nz:
            meaning: Number of redshift samples
            type: int
        nbin:
            meaning: Number of bins
            type: int
        z:
            meaning: Redshift sample values
            type: real 1d
        bin\_:
            meaning: n(z) at redshift sample values.  bin_1, bin_2, ...
            type: real 1d
