name: "planck_py"
version: "1.0"
purpose: "Lightweight python-based Planck likelihood code"
url: "https://github.com/heatherprince/planck-lite-py"
interface: "planck_py_interface.py"
attribution: ["Heather Prince, Jo Dunkley (Library)", "CosmoSIS Team (Interface)"]
rules:
    "None"
cite:
    - "Phys. Rev. D 100, 083502"
    - "https://doi.org/10.1051/0004-6361/201936386"
    - "https://doi.org/10.1051/0004-6361/201526926"

assumptions:
    - "Planck 2015 or 2018 data"
    - "Compresed form of Planck likelihoods"

explanation: |
    "The lite version of the Planck likelihoods can be more useful than 
    the main version both because it is purely Gaussian and so can be easily
    used in Fisher matrix calculations, and because it is much cleaner and
    easier to understand. "

# List of parameters that can go in the params.ini file in the section for this module    
params:
    year:
        meaning: Whether to use 2015 or 2018 data
        type: int
        default:
    spectra:
        meaning: "Which set of spectra to use, TT or TTTEEE"
        type: str
        default:
    use_low_ell_bins:
        meaning: "Whether to include ell < 30 data points"
        type: bool
        default:
    ell_max_tt:
        meaning: "Maximum ell for TT spectrum"
        type: int
        default: 2509
    ell_max_te:
        meaning: "Maximum ell for TE spectrum"
        type: int
        default: 1997
    ell_max_ee:
        meaning: "Maximum ell for EE spectrum"
        type: int
        default: 1997
    data_directory:
        meaning: "Directory to search for data"
        type: "[module dir]/data"
        default:
    use_data_from_test:
        meaning: "Set to a directory generated by the CosmoSIS test sampler to use it as mock observations instead of true Planck data"
        type: str
        default: ""
    x_name:
        meaning: Datablock name for CMB ell values
        type: str
        default: ell
    y_section:
        meaning: Datablock section for CMB spectra
        type: str
        default: cmb_cl
    like_name:
        meaning: Name for the saved output likelihood
        type: str
        default: planck
    likelihood_only:
        meaning: Skip saving everything except the likelihood.  This prevents
            you from using e.g. the Fisher matrix sampler but can be faster for quick
            likelihoods
        type: bool
        default: false
    include_norm:
        meaning: Include the normalizing constant at the start of the likelihood.  May
            be needed when comparing models.
        type: bool
        default: false      
#Inputs for a given choice of a parameter, from the values.ini or from other modules
#If no such choices, just do one of these omitting mode=something part:
inputs:
    cmb_cl:
        ell:
            meaning: CMB power spectrum ell values of other inputs
            type: real 1d
            default:
        TT:
            meaning: CMB temperature power spectrum in ell(ell+1)/2pi units
            type: real 1d
            default:
        TE:
            meaning: CMB temperature-E-mode polarization cross power spectrum in ell(ell+1)/2pi units
            type: real 1d
            default:
        EE:
            meaning: CMB E-mode polaration power spectrum in ell(ell+1)/2pi units
            type: real 1d
            default:

outputs:
    likelihoods:
        planck_like:
            meaning: Planck likelihood for given selection
            type: real
    data_vector:
        planck_covariance:
            meaning: Fixed covariance matrix, only if likelihood_only=F
            type: real 2d
        planck_data:
            meaning: Concatenated D_ell, only if likelihood_only=F
            type: real 1d
        planck_simulation:
            meaning: Simulated D_ell data vector including simulated noise
                for e.g. ABC, only if likelihood_only=F
            type: real 1d
        planck_theory:
            meaning: Predicted theory values D_ell only
                if likelihood_only=F
            type: real 1d
        planck_chi2:
            meaning: chi^2 value, only if likelihood_only=F
            type: real
